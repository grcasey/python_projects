
import time
start = time.time()
seed(0)
set_random_seed(0)
hist_rnn = model_rnn.fit(X_train, y_train, batch_size = 64, epochs = 50,
          validation_data=[X_test, y_test], verbose = 1)
print('It took {0:0.1f} seconds'.format(time.time() - start))

Train on 1000 samples, validate on 200 samples
Epoch 1/50
1000/1000 [==============================] - 9s 9ms/step - loss: 2.1348 - acc: 0.2470 - val_loss: 1.8716 - val_acc: 0.3850
Epoch 2/50
1000/1000 [==============================] - 6s 6ms/step - loss: 1.6716 - acc: 0.4390 - val_loss: 1.6218 - val_acc: 0.4350
Epoch 3/50
1000/1000 [==============================] - 6s 6ms/step - loss: 1.2865 - acc: 0.5690 - val_loss: 1.3424 - val_acc: 0.5450
Epoch 4/50
1000/1000 [==============================] - 6s 6ms/step - loss: 1.0156 - acc: 0.6670 - val_loss: 1.2204 - val_acc: 0.5750
Epoch 5/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.8049 - acc: 0.7240 - val_loss: 0.9715 - val_acc: 0.6800
Epoch 6/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.6778 - acc: 0.7740 - val_loss: 0.7708 - val_acc: 0.7250
Epoch 7/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.5388 - acc: 0.8280 - val_loss: 0.7964 - val_acc: 0.7400
Epoch 8/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.4664 - acc: 0.8480 - val_loss: 0.7346 - val_acc: 0.7700
Epoch 9/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.4097 - acc: 0.8590 - val_loss: 0.7149 - val_acc: 0.7450
Epoch 10/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.3461 - acc: 0.8800 - val_loss: 0.5479 - val_acc: 0.8150
Epoch 11/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.2874 - acc: 0.9030 - val_loss: 0.6962 - val_acc: 0.7900
Epoch 12/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.3095 - acc: 0.8840 - val_loss: 0.7304 - val_acc: 0.7450
Epoch 13/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.3360 - acc: 0.8830 - val_loss: 0.4446 - val_acc: 0.8700
Epoch 14/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.2445 - acc: 0.9230 - val_loss: 0.4807 - val_acc: 0.8450
Epoch 15/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.1765 - acc: 0.9400 - val_loss: 0.4219 - val_acc: 0.8700
Epoch 16/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.1630 - acc: 0.9460 - val_loss: 0.4183 - val_acc: 0.8750
Epoch 17/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.1435 - acc: 0.9480 - val_loss: 0.4002 - val_acc: 0.8900
Epoch 18/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.1319 - acc: 0.9520 - val_loss: 0.4175 - val_acc: 0.8500
Epoch 19/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.1037 - acc: 0.9660 - val_loss: 0.3768 - val_acc: 0.8900
Epoch 20/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0982 - acc: 0.9700 - val_loss: 0.5475 - val_acc: 0.8500
Epoch 21/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0727 - acc: 0.9760 - val_loss: 0.4449 - val_acc: 0.8800
Epoch 22/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0583 - acc: 0.9830 - val_loss: 0.4396 - val_acc: 0.8950
Epoch 23/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0475 - acc: 0.9880 - val_loss: 0.3797 - val_acc: 0.8950
Epoch 24/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0471 - acc: 0.9850 - val_loss: 0.6202 - val_acc: 0.8250
Epoch 25/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0480 - acc: 0.9870 - val_loss: 0.4935 - val_acc: 0.8600
Epoch 26/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0498 - acc: 0.9850 - val_loss: 0.4186 - val_acc: 0.8900
Epoch 27/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0522 - acc: 0.9850 - val_loss: 0.3697 - val_acc: 0.9200
Epoch 28/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0239 - acc: 0.9970 - val_loss: 0.3945 - val_acc: 0.9050
Epoch 29/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0150 - acc: 0.9980 - val_loss: 0.4255 - val_acc: 0.8950
Epoch 30/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0102 - acc: 1.0000 - val_loss: 0.4082 - val_acc: 0.9100
Epoch 31/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0057 - acc: 1.0000 - val_loss: 0.3959 - val_acc: 0.9050
Epoch 32/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0044 - acc: 1.0000 - val_loss: 0.4136 - val_acc: 0.9050
Epoch 33/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0037 - acc: 1.0000 - val_loss: 0.4097 - val_acc: 0.9050
Epoch 34/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0032 - acc: 1.0000 - val_loss: 0.4104 - val_acc: 0.9050
Epoch 35/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0028 - acc: 1.0000 - val_loss: 0.4120 - val_acc: 0.9050
Epoch 36/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0026 - acc: 1.0000 - val_loss: 0.4139 - val_acc: 0.9050
Epoch 37/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0023 - acc: 1.0000 - val_loss: 0.4172 - val_acc: 0.9050
Epoch 38/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0021 - acc: 1.0000 - val_loss: 0.4221 - val_acc: 0.9050
Epoch 39/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0020 - acc: 1.0000 - val_loss: 0.4203 - val_acc: 0.9050
Epoch 40/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0018 - acc: 1.0000 - val_loss: 0.4260 - val_acc: 0.9050
Epoch 41/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0017 - acc: 1.0000 - val_loss: 0.4238 - val_acc: 0.9050
Epoch 42/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0016 - acc: 1.0000 - val_loss: 0.4247 - val_acc: 0.9050
Epoch 43/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0015 - acc: 1.0000 - val_loss: 0.4311 - val_acc: 0.9050
Epoch 44/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0014 - acc: 1.0000 - val_loss: 0.4304 - val_acc: 0.9050
Epoch 45/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0013 - acc: 1.0000 - val_loss: 0.4310 - val_acc: 0.9050
Epoch 46/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0012 - acc: 1.0000 - val_loss: 0.4300 - val_acc: 0.9050
Epoch 47/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0012 - acc: 1.0000 - val_loss: 0.4335 - val_acc: 0.9050
Epoch 48/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0011 - acc: 1.0000 - val_loss: 0.4359 - val_acc: 0.9050
Epoch 49/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0011 - acc: 1.0000 - val_loss: 0.4352 - val_acc: 0.9050
Epoch 50/50
1000/1000 [==============================] - 6s 6ms/step - loss: 0.0010 - acc: 1.0000 - val_loss: 0.4375 - val_acc: 0.9050
It took 302.0 seconds
200/200 [==============================] - 0s 2ms/step

# Evaluate performance of RNN (LSTM) model
In [9]: scores = model_rnn.evaluate(X_test, y_test, verbose = 1)
   ...: print('Test cross-entropy loss:', scores[0])
   ...: print('Test accuracy:', scores[1])
200/200 [==============================] - 0s 2ms/step
Test cross-entropy loss: 0.43750
Test accuracy: 0.9050